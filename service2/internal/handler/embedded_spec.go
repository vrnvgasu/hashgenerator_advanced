// Code generated by go-swagger; DO NOT EDIT.

package handler

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Данный сервис должен, взаимодействуя с сервисом считающим хэши (по выбранному вами протоколу), получать из входящих строк их хэши, сохранять их в свою БД (выбор так же за вами) с присвоем id, по которым далее можно будет запрашивать хэши.",
    "title": "Итоговое задание. Хэши.",
    "version": "1.0.0"
  },
  "paths": {
    "/check": {
      "get": {
        "summary": "Получает по id хэш из хранилища (если есть)",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Get hash by this id",
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArrayOfHash"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/send": {
      "post": {
        "summary": "Получает на вход список строк, хэши от которых нужно посчитать и сохранить",
        "parameters": [
          {
            "description": "Strings for hash",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArrayOfHash"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "ArrayOfHash": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Hash"
      }
    },
    "ArrayOfStrings": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Hash": {
      "type": "object",
      "required": [
        "id",
        "hash"
      ],
      "properties": {
        "hash": {
          "type": "string",
          "example": "a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a"
        },
        "id": {
          "type": "integer",
          "example": 38
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Данный сервис должен, взаимодействуя с сервисом считающим хэши (по выбранному вами протоколу), получать из входящих строк их хэши, сохранять их в свою БД (выбор так же за вами) с присвоем id, по которым далее можно будет запрашивать хэши.",
    "title": "Итоговое задание. Хэши.",
    "version": "1.0.0"
  },
  "paths": {
    "/check": {
      "get": {
        "summary": "Получает по id хэш из хранилища (если есть)",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Get hash by this id",
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArrayOfHash"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/send": {
      "post": {
        "summary": "Получает на вход список строк, хэши от которых нужно посчитать и сохранить",
        "parameters": [
          {
            "description": "Strings for hash",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ArrayOfStrings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArrayOfHash"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "ArrayOfHash": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Hash"
      }
    },
    "ArrayOfStrings": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Hash": {
      "type": "object",
      "required": [
        "id",
        "hash"
      ],
      "properties": {
        "hash": {
          "type": "string",
          "example": "a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a"
        },
        "id": {
          "type": "integer",
          "example": 38
        }
      }
    }
  }
}`))
}
